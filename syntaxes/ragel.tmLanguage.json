{
	"$schema": "./tmLanguage_schema.json",
	"name": "Ragel",
	"scopeName": "source.ragel",
	"patterns": [
		{
			"name": "meta.block.ragel",
			"begin": "%%{",
			"captures": {
				"0": {
					"name": "punctuation.section.embedded.ragel"
				}
			},
			"end": "}%%",
			"patterns": [
				{
					"include": "#source_ragel"
				}
			]
		},
		{
			"begin": "%%",
			"beginCaptures": {
				"0": {
					"name": "punctuation.section.embedded.ragel"
				}
			},
			"end": "$",
			"patterns": [
				{
					"include": "#source_ragel"
				}
			]
		},
		{
			"include": "source.cpp"
		}
	],
	"repository": {
		"action_name": {
			"name": "entity.name.type.action-reference.ragel",
			"patterns": [
				{
					"match": "([@$>%])\\s*(\\w+)",
					"captures": {
						"1": {
							"name": "keyword.operator.transition.ragel"
						},
						"2": {
							"name": "entity.name.function.action.ragel",
							"patterns": [
								{
									"include": "#keywords"
								}
							]
						}
					}
				},
				{
					"name": "meta.function.action.embeded.ragel",
					"begin": "([@$>%])\\s*(?={)",
					"beginCaptures": {
						"1": {
							"name": "keyword.operator.transition.ragel"
						}
					},
					"end": "(?<=})",
					"patterns": [
						{
							"include": "#embedded_code"
						}
					]
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.other.ragel",
					"match": "\\b(machine|alphtype|action|include|access|getkey|variable|import|export|prepush|postpop|write)\\b"
				},
				{
					"name": "keyword.control.ragel",
					"match": "\\b(when)\\b"
				},
				{
					"name": "constant.language.builtin-actions.ragel",
					"match": "\\b(eof|err)\\b"
				}
			]
		},
		"write_components": {
			"patterns": [
				{
					"name": "constant.language.ragel",
					"match": "\\b(data|start|first_final|error|init|exec|exports)\\b"
				}
			]
		},
		"normal_quoted_strings": {
			"patterns": [
				{
					"name": "string.quoted.ragel",
					"begin": "\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.ragel"
						}
					},
					"end": "(\")(i?)",
					"endCaptures": {
						"1": {
							"name": "punctuation.definition.string.end.ragel"
						},
						"2": {
							"name": "keyword.operator.word.ignore-case.ragel"
						}
					},
					"patterns": [
						{
							"include": "#literal_escaped_char"
						}
					]
				},
				{
					"name": "string.quoted.ragel",
					"begin": "'",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.ragel"
						}
					},
					"end": "(')(i?)",
					"endCaptures": {
						"1": {
							"name": "punctuation.definition.string.end.ragel"
						},
						"2": {
							"name": "keyword.operator.word.ignore-case.ragel"
						}
					},
					"patterns": [
						{
							"include": "#literal_escaped_char"
						}
					]
				}
			]
		},
		"regexp": {
			"patterns": [
				{
					"name": "string.regexp.ragel",
					"begin": "\\[",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.ragel"
						}
					},
					"end": "\\]",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.ragel"
						}
					},
					"patterns": [
						{
							"include": "#literal_escaped_char"
						}
					]
				},
				{
					"name": "string.regexp.classic.ragel",
					"begin": "\\/",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.ragel"
						}
					},
					"end": "\\/",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.ragel"
						}
					},
					"patterns": [
						{
							"include": "#literal_escaped_char"
						}
					]
				}
			]
		},
		"integer_literals": {
			"patterns": [
				{
					"comment": "Floats are decimal or hexadecimal",
					"match": "\\b([0-9](_*[0-9])*\\.[0-9](_*[0-9])*(_*[eE][-+]?[0-9](_*[0-9])*)?|[0-9](_*[0-9])*_*[eE][-+]?[0-9](_*[0-9])*|0[xX]_*[0-9a-fA-F](_*[0-9a-fA-F])*\\.[0-9a-fA-F](_*[0-9a-fA-F])*(_*[pP][-+]?[0-9](_*[0-9])*)?|0[xX]_*[0-9a-fA-F](_*[0-9a-fA-F])*_*[pP][-+]?[0-9](_*[0-9])*)\\b",
					"name": "constant.numeric.float.ragel"
				}
			]
		},
		"float_literals": {
			"patterns": [
				{
					"match": "\\b([0-9](_*[0-9])*|0([xX]_*[0-9a-fA-F](_*[0-9a-fA-F])*|[oO]_*[0-7](_*[0-7])*|[bB]_*[01](_*[01])*))\\b",
					"name": "constant.numeric.ragel"
				}
			]
		},
		"numeric_literals": {
			"comment": "#numeric_literals copied from haskell tmlanguage definition",
			"patterns": [
				{
					"include": "#integer_literals"
				},
				{
					"include": "#float_literals"
				}
			]
		},
		"literals": {
			"patterns": [
				{
					"include": "#regexp"
				},
				{
					"include": "#normal_quoted_strings"
				},
				{
					"include": "#numeric_literals"
				}
			]
		},
		"literal_escaped_char": {
			"patterns": [
				{
					"match": "\\\\[0abtnvfr+\\-*.'\"\\^\\$\\/\\\\\\[\\](){}|%?;]",
					"name": "constant.character.escape.ragel"
				},
				{
					"match": "\\\\.",
					"name": "invalid.illegal.not-support.ragel"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"begin": "#",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.ragel"
						}
					},
					"end": "$\\n?",
					"name": "comment.line.ragel"
				}
			]
		},
		"embedded_code": {
			"patterns": [
				{
					"name": "source.cpp.embedded.ragel",
					"begin": "\\{",
					"beginCaptures": {
						"0": {
							"name": "punctuation.section.embedded.cpp"
						}
					},
					"end": "\\}",
					"endCaptures": {
						"0": {
							"name": "punctuation.section.embedded.cpp"
						}
					},
					"patterns": [
						{
							"name": "keyword.control.embedded-code.ragel",
							"match": "\\b(fhold|fexec|fgoto|fnext|fcall|fret|fbreak)"
						},
						{
							"include": "source.cpp"
						}
					]
				}
			]
		},
		"statements": {
			"patterns": [
				{
					"name": "meta.function.action.ragel",
					"begin": "\\b(action)\\s+(\\w+)\\s+(?={)",
					"beginCaptures": {
						"1": {
							"name": "storage.type.action.ragel"
						},
						"2": {
							"name": "entity.name.function.action.ragel"
						}
					},
					"end": "(?<=})",
					"patterns": [
						{
							"include": "#embedded_code"
						}
					]
				},
				{
					"match": "\\b(machine)\\s+(\\w+)\\s*(;)",
					"captures": {
						"1": {
							"name": "storage.type.machine.ragel"
						},
						"2": {
							"name": "entity.name.type.machine.ragel"
						},
						"3": {
							"name": "punctuation.terminator.ragel"
						}
					}
				},
				{
					"begin": "\\b(alphtype)\\s+",
					"beginCaptures": {
						"1": {
							"name": "keyword.control.directive.ragel"
						}
					},
					"end": ";",
					"endCaptures": {
						"0": {
							"name": "punctuation.terminator.ragel"
						}
					},
					"patterns": [
						{
							"include": "source.cpp"
						}
					]
				},
				{
					"begin": "\\b(include)\\s+",
					"beginCaptures": {
						"1": {
							"name": "keyword.control.include.ragel"
						}
					},
					"end": ";",
					"endCaptures": {
						"0": {
							"name": "punctuation.terminator.ragel"
						}
					},
					"patterns": [
						{
							"include": "#normal_quoted_strings"
						},
						{
							"name": "entity.name.type.machine.ragel",
							"match": "\\b\\w+\\b"
						}
					]
				},
				{
					"match": "\\b(access|getkey|variable)\\s+(.*)(;)",
					"captures": {
						"1": {
							"name": "keyword.control.directive.ragel"
						},
						"3": {
							"name": "punctuation.terminator.ragel"
						}
					}
				},
				{
					"begin": "\\b(import)\\s+",
					"beginCaptures": {
						"1": {
							"name": "keyword.control.import.ragel"
						}
					},
					"end": ";",
					"endCaptures": {
						"0": {
							"name": "punctuation.terminator.ragel"
						}
					},
					"patterns": [
						{
							"include": "#normal_quoted_strings"
						}
					]
				},
				{
					"name": "keyword.control.export.ragel",
					"begin": "\\b(export)\\s+",
					"end": "(?<=;)",
					"patterns": [
						{
							"include": "#machine_definition"
						}
					]
				},
				{
					"name": "meta.function.stack_hook.ragel",
					"begin": "\\b(prepush|postpop)\\s+(?={)",
					"beginCaptures": {
						"1": {
							"name": "keyword.control.ragel"
						}
					},
					"end": "(?<=})",
					"patterns": [
						{
							"include": "#embedded_code"
						}
					]
				},
				{
					"match": "\\b(write)\\s+(\\w+)\\s*(;)",
					"captures": {
						"1": {
							"name": "keyword.control.directive.ragel"
						},
						"2": {
							"patterns": [
								{
									"include": "#write_components"
								}
							]
						},
						"3": {
							"name": "punctuation.terminator.ragel"
						}
					}
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"match": ",",
					"name": "punctuation.separator.join.ragel"
				},
				{
					"match": "\\(",
					"name": "punctuation.section.group.begin.ragel"
				},
				{
					"match": "\\)",
					"name": "punctuation.section.group.end.ragel"
				},
				{
					"match": "([|&!^-]|--)",
					"name": "keyword.operator.ragel"
				},
				{
					"match": "(?<!\\.)\\.\\.(?!\\.)",
					"name": "keyword.operator.range.ragel"
				},
				{
					"match": "(\\.|\\<\\:|\\:\\>\\>?)",
					"name": "keyword.operator.concatenation.ragel"
				},
				{
					"match": "[>@$%]",
					"name": "keyword.operator.transition.ragel"
				},
				{
					"name": "keyword.operator.repetition.ragel",
					"match": "(\\*\\*?|[?+]|\\{\\s*\\d\\s*\\}|\\{\\s*\\d\\s*,\\s*\\}|\\{\\s*,\\s*\\d\\s*\\}|\\{\\s*\\d\\s*,\\s*\\d\\s*\\})"
				}
			]
		},
		"machine_definition": {
			"patterns": [
				{
					"name": "meta.statement.machine-definition.ragel",
					"begin": "\\b(\\w+)\\s*(=)",
					"beginCaptures": {
						"1": {
							"name": "entity.name.type.machine-definition.ragel"
						},
						"2": {
							"name": "keyword.operator.assignment.ragel"
						}
					},
					"end": ";",
					"endCaptures": {
						"0": {
							"name": "punctuation.terminator.ragel"
						}
					},
					"patterns": [
						{
							"include": "#literals"
						},
						{
							"include": "#action_name"
						},
						{
							"include": "#keywords"
						},
						{
							"include": "#embedded_code"
						},
						{
							"include": "#operators"
						},
						{
							"include": "#comments"
						}
					]
				},
				{
					"name": "meta.statement.machine-instantiation.ragel",
					"begin": "\\b(\\w+)\\s*(:=)",
					"beginCaptures": {
						"1": {
							"name": "entity.name.type.machine-instantiation.ragel"
						},
						"2": {
							"name": "keyword.operator.assignment.instantiation.ragel"
						}
					},
					"end": ";",
					"endCaptures": {
						"0": {
							"name": "punctuation.terminator.ragel"
						}
					},
					"patterns": [
						{
							"include": "#literals"
						},
						{
							"include": "#action_name"
						},
						{
							"include": "#keywords"
						},
						{
							"include": "#embedded_code"
						},
						{
							"include": "#operators"
						},
						{
							"include": "#comments"
						}
					]
				}
			]
		},
		"source_ragel": {
			"patterns": [
				{
					"include": "#comments"
				},
				{
					"include": "#statements"
				},
				{
					"include": "#keywords"
				},
				{
					"include": "#machine_definition"
				},
				{
					"include": "#literals"
				}
			]
		}
	}
}